<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://cakephpbrasil.com.br/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://cakephpbrasil.com.br/feed.xml" rel="self" type="application/atom+xml" /><link href="http://cakephpbrasil.com.br/" rel="alternate" type="text/html" /><updated>2017-10-26T10:10:14-04:00</updated><id>http://cakephpbrasil.com.br//</id><title type="html">CakePHP Brasil</title><subtitle>CakePHP Brasil é uma comunidade de desenvolvedores apaixonados pelo framework PHP de desenvolvimento rápido.</subtitle><entry><title type="html">Ei, Dev Cakephp. Por que você não contribui?</title><link href="http://cakephpbrasil.com.br/documentacao/2017/04/10/ei-dev-cakephp-por-que-voce-nao-contribui/" rel="alternate" type="text/html" title="Ei, Dev Cakephp. Por que você não contribui?" /><published>2017-04-10T22:04:00-04:00</published><updated>2017-04-10T22:04:00-04:00</updated><id>http://cakephpbrasil.com.br/documentacao/2017/04/10/ei-dev-cakephp-por-que-voce-nao-contribui</id><content type="html" xml:base="http://cakephpbrasil.com.br/documentacao/2017/04/10/ei-dev-cakephp-por-que-voce-nao-contribui/">&lt;h2 id=&quot;ei-dev-cakephp-por-que-você-não-contribui&quot;&gt;Ei, Dev Cakephp. Por que você não contribui?&lt;/h2&gt;

&lt;p&gt;Apesar do título um pouco polêmico, este artigo não terá nada de polêmico, o motivo de eu estar escrevendo-o é que acredito que seja um objetivo comum de um desenvolvedor quando aprende uma linguagem, framework ou uma lib, contribuir pro crescimento dos mesmos, e muitas vezes ficamos tentando desenvolver uma feature enorme ou corrigir um bug relatado e acabamos sendo desmotivados porque aquilo parece muito complexo.&lt;/p&gt;

&lt;p&gt;Vou citar o exemplo do framework cakephp 3, que utilizo com mais frequência,  ele possui uma documentação que descreve os recursos do framework que tem o nome de cookbook, a qual possui suporte para vários idiomas. O problema é que a documentação completa e atualizada é somente em inglês, dependendo que integrantes da comunidade submetam as traduções.&lt;/p&gt;

&lt;p&gt;Há algum tempo comecei a ficar incomodado, pois em todas as vezes que eu procurava algo sobre o cakephp no google ele me direcionava para o cookbook, o idioma que vinha pré-definido era o português, e praticamente todas as vezes a imagem que aparecia era esta:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://ap.imagensbrasil.org/images/2017/04/09/Selecao_065.png&quot; alt=&quot;enter image description here&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Todas as vezes eu alterava o idioma para o inglês, e por mais que o meu inglês não seja dos melhores, eu conseguia ler e entender para resolver meu problema. A alguns dias quando eu fiz isso novamente, eu analisei minha ação e pensei, se alguma pessoa que está querendo aprender cakephp e entra em uma página que não tem suporte a português com certeza a dificuldade dela aprendê-lo será ainda maior, caso não tenha inglês fluente, pois além de entender como as coisas no cakephp funcionam, terá que ficar dependendo do google tradutor.&lt;/p&gt;

&lt;p&gt;Foi então que cogitei começar a contribuir para a tradução de algumas páginas da documentação e mudar um pouco essa situação, e me surpreendi com o resultado, pois, durante a leitura minuciosa da documentação em inglês, eu acabei descobrindo coisas que eu não utilizava do framework ou utilizava erroneamente, além é claro, de dar uma exercitada no idioma inglês, que por sinal, se você é da área de tecnologia não preciso explicar porque isso é importante, certo? risos.&lt;/p&gt;

&lt;p&gt;Recordando o assunto levantado no início deste artigo, sobre o interesse em contribuir, essa é a minha dica para você desenvolvedor cakephp, contribua para a tradução do cookbook! Você não precisará de super poderes para ajudar, e ainda o seu conhecimento só tem a crescer, tanto no idioma quanto no framework.&lt;/p&gt;

&lt;p&gt;#Por onde começar#&lt;/p&gt;

&lt;p&gt;Se você está interessado em contribuir com as traduções, há algumas coisas que são interessantes para saber antes de contribuir:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A documentação é mantida no github, neste &lt;a href=&quot;https://github.com/cakephp/docs&quot;&gt;repositório&lt;/a&gt;. Para submeter você deve criar um fork, alterar a página desejada e submeter um pull request.&lt;/li&gt;
  &lt;li&gt;A documentação é escrita em &lt;a href=&quot;https://pt.wikipedia.org/wiki/ReStructuredText&quot;&gt;reStructuredText&lt;/a&gt;, uma linguagem de marcação nos moldes do Markdown. &lt;a href=&quot;http://www.sphinx-doc.org/pt_BR/stable/rest.html&quot;&gt;Aqui&lt;/a&gt; você pode ler mais sobre ele.&lt;/li&gt;
  &lt;li&gt;A documentação do cakephp usa o Travis CI para integração contínua e quando você enviar um pull request, se atenha ao resultado da build, ela é executada para gerar o html através dos arquivos .rst (extensão reStructuredText).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;#Páginas traduzidas por mim#&lt;/p&gt;

&lt;p&gt;Desde que decidi começar a contribuir com as traduções, eu traduzi as páginas abaixo da documentação para pt-br:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://book.cakephp.org/3.0/pt/views.html&quot;&gt;Views&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://book.cakephp.org/3.0/pt/views/cells.html&quot;&gt;View Cells&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://book.cakephp.org/3.0/pt/views/themes.html&quot;&gt;Temas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Se você encontrou algum problema nas minhas traduções, por favor, submeta um pull request para o repositório oficial com a correção. Você já contribuiu com a tradução/correção de alguma página do cookbook? Existe alguma página muito importante do cookbook que não possui tradução para pt-br? Deixe seu comentário!&lt;/p&gt;</content><author><name>Alan Lira</name></author><summary type="html">Ei, Dev Cakephp. Por que você não contribui?</summary></entry><entry><title type="html">Criando Components no CakePHP 3</title><link href="http://cakephpbrasil.com.br/tutorial/2017/03/07/criando-components-no-cakephp-3/" rel="alternate" type="text/html" title="Criando Components no CakePHP 3" /><published>2017-03-07T05:20:00-05:00</published><updated>2017-03-07T05:20:00-05:00</updated><id>http://cakephpbrasil.com.br/tutorial/2017/03/07/criando-components-no-cakephp-3</id><content type="html" xml:base="http://cakephpbrasil.com.br/tutorial/2017/03/07/criando-components-no-cakephp-3/">&lt;h2 id=&quot;o-que-é-um-component-segundo-a-doc-do-cakephp&quot;&gt;O que é um Component segundo a doc do CakePHP&lt;/h2&gt;

&lt;p&gt;Os componentes são pacotes de lógica que são compartilhados entre controllers. O CakePHP vem com um conjunto fantástico de componentes que você pode usar para ajudar em várias tarefas comuns. Você também pode criar seus próprios componentes. Se você copia e cola parte de código entre controllers, você deve considerar criar seu próprio Component para conter essa funcionalidade. A criação de Components no CakePHP mantém o código dos controllers mais limpos e permite que você reutilize código entre controllers diferentes.&lt;/p&gt;

&lt;p&gt;Documentação: &lt;a href=&quot;https://book.cakephp.org/3.0/en/controllers/components.html#components&quot;&gt;https://book.cakephp.org/3.0/en/controllers/components.html#components&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;criando-um-component&quot;&gt;Criando um Component&lt;/h2&gt;

&lt;p&gt;Para nosso exemplo, vamos criar um Component para criação de senhas com caracteres aleatórios. Para isso precisamos criar uma classe no diretório &lt;code class=&quot;highlighter-rouge&quot;&gt;src/Controller/Component/&lt;/code&gt;, um nome de component seguindo a convenção do cake seria algo como: &lt;code class=&quot;highlighter-rouge&quot;&gt;MinhaClasseComponent.php&lt;/code&gt; que extende da classe &lt;code class=&quot;highlighter-rouge&quot;&gt;Component&lt;/code&gt;.
Como umas das filosofias do nosso Framework favorito é facilitar o trabalho, podemos usar o PHP CLI(command line inteface) ou vulgarmente conhecido como Bake.&lt;/p&gt;

&lt;p&gt;Para executar o console do cake, precisamos simplesmente executar o código abaixo.&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bin/cake
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Com esse comando teremos uma saída no terminal parecido com isso:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Welcome to CakePHP v3.3.14 Console
---------------------------------------------------------
App : src
Path: /var/www/cakephp.dev/src/
PHP: 7.0.16
---------------------------------------------------------
Current Paths:
App: src
Path: /var/www/cakephp.dev/src
Core: /var/www/cakephp.dev/vendor/cakephp/cakephp

Available Shells:

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Bake] bake

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;DebugKit] benchmark, whitespace

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Migrations] migrations

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;CORE] cache, i18n, orm_cache, plugin, routes, server

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;app] console

To run an app or core &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;, &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cake shell_name &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;args]&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
To run a plugin &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;, &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cake Plugin.shell_name &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;args]&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
To get &lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;on a specific &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;, &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cake shell_name --help&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note que o shell do cake nos oferece algumas possibilidades para geraçao de código, debug, migrations e etc, a possibilidade é infinita.&lt;/p&gt;

&lt;p&gt;No nosso caso usaremos o &lt;code class=&quot;highlighter-rouge&quot;&gt;bake&lt;/code&gt;, agora se executarmos o seguinte código:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bin/cake bake
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Teremos a seguinte saída no nosso terminal:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Welcome to CakePHP v3.3.14 Console
---------------------------------------------------------------
App : src
Path: /var/www/cakephp.dev/src/
PHP : 7.0.16
---------------------------------------------------------------
The following commands can be used to generate skeleton code &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;your application.

Available bake commands:

- all
- behavior
- cell
- component
- controller
- fixture
- form
- helper
- mailer
- migration
- migration_diff
- migration_snapshot
- model
- plugin
- seed
- shell
- shell_helper
- task
- template
- &lt;span class=&quot;nb&quot;&gt;test

&lt;/span&gt;By using &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cake bake &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;name]&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; you can invoke a specific bake task.

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note que as possibilidades aumentaram, e podemos gerar códigos para controller, models, plugins, inclusive executar consultas no próprio shell.&lt;/p&gt;

&lt;p&gt;Finalmente vamos criar nosso component, esta foi uma pequena introdução ao shell do cakePHP.
Em seu terminal execute o seguinte comando:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bin/cake bake component UserGeneratePass
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;A saída no terminal será algo como:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Creating file /var/www/cakephp.dev/src/Controller/Component/TestComponentTest.php
Wrote &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/var/www/cakephp.dev/src/Controller/Component/TestComponentTest.php&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

Creating file /var/www/cakephp.dev/tests/TestCase/Controller/Component/TestComponentTest.php
Wrote &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/var/www/cakephp.dev/tests/TestCase/Controller/Component/TestComponentTest.php&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Note que nosso Bake já gera um arquivo de test, para executarmos testes uniários, para este tutorial não utilizaremos este arquivo, pode inclusive ficar uma pendência para um proximo post.&lt;/p&gt;

&lt;p&gt;Enfim, Nosso componente foi criado, agora vamos criar o método responsável pela criação de senha:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App\Controller\Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cake\Controller\Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cake\Controller\ComponentRegistry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserGeneratePassComponent&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_defaultConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// método responsável pela criação da senha.
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generatePass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$uppercase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$symbol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$lmin&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'abcdefghijklmnopqrstuvwxyz'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$lmai&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$num&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1234567890'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$simb&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'!@#$%*-'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$return&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$caracters&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$caracters&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;.=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$lmin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$uppercase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$caracters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$lmai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$caracters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$caracters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$simb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;$len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$caracters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
             &lt;span class=&quot;nv&quot;&gt;$rand&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mt_rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
             &lt;span class=&quot;nv&quot;&gt;$return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$caracters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$rand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;exemplo-de-uso&quot;&gt;Exemplo de uso&lt;/h2&gt;
&lt;p&gt;No seu controller &lt;code class=&quot;highlighter-rouge&quot;&gt;php UserController.php&lt;/code&gt; por exemplo, você pode chamar o Component da seguinte forma:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserController&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Controller&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// importando o nosso component para ficar acessível ao nosso controller.
&lt;/span&gt;        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;loadComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'UserGeneratePass'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newEntity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'post'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// Gera uma senha com 15 carecteres de números, letras e símbolos
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]){&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// aqui começa a mágica.
&lt;/span&gt;                &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'password'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;UserGeneratePass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;generatePass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;patchEntity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Flash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Usuário adicionado com sucesso.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'class'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'alert alert-info'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;redirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'action'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'index'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Flash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Não foi possível adicionar este usuário, por favor tente novamente.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusão&quot;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Esperamos que este tutorial simples ajude você no seu desenvolvimento, essa é uma dica bem básica mas que pode salvar vidas (risos).&lt;/p&gt;

&lt;p&gt;Se você tiver dúvidas ou encontrar nossos erros no tutorial acima, deixe um comentário abaixo para nos informar.&lt;/p&gt;

&lt;p&gt;Caso tenha ficado alguma dúvida, ou tenha outra solução, fique a vontade para deixar seu comentário, ou criar um PR com seu artigo, tenho certeza que a comunidade agradece.&lt;/p&gt;</content><author><name>Flaviano Honorato</name></author><summary type="html">O que é um Component segundo a doc do CakePHP</summary></entry><entry><title type="html">Reconectar o MySQL manualmente no CakePHP 3</title><link href="http://cakephpbrasil.com.br/dicas/2017/03/02/reconectar-o-mysql-manualmente-no-cakephp-3/" rel="alternate" type="text/html" title="Reconectar o MySQL manualmente no CakePHP 3" /><published>2017-03-02T16:40:00-05:00</published><updated>2017-03-02T16:40:00-05:00</updated><id>http://cakephpbrasil.com.br/dicas/2017/03/02/reconectar-o-mysql-manualmente-no-cakephp-3</id><content type="html" xml:base="http://cakephpbrasil.com.br/dicas/2017/03/02/reconectar-o-mysql-manualmente-no-cakephp-3/">&lt;h2 id=&quot;o-erro&quot;&gt;O Erro&lt;/h2&gt;
&lt;p&gt;Desenvolvemos um sistema para gerar relatórios em algumas partes de nossa aplicação. O processo estava rodando com uma longa execução via terminal(shell CakePHP). Tivemos problemas estranhos após a implantação da fila para o servidor de produção. Algumas rotinas foram processadas perfeitamente no início, mas depois de um dia, todos os trabalhos de relatório falharam. Se nós reiniciar-mos a fila, eles voltam a funcionar normalmente, e então depois de um dia voltam a falhar.&lt;/p&gt;

&lt;p&gt;No arquivo de log, encontramos algumas mensagens de erro como essa abaixo:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Exception: SQLState[HY000]: General error: 2006 MySQL server has
 gone away &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;xxx/vendor/cakephp/cakephp/src/Database
/Statement/MysqlStatement.php line 36]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;O erro acima indica que tem algo a ver com a parte do banco de dados do nosso sistema.&lt;/p&gt;

&lt;h2 id=&quot;primeira-tentativa&quot;&gt;Primeira tentativa&lt;/h2&gt;

&lt;p&gt;Como você deve ter imaginado, nossa primeira tentativa é tentar encontrar respostas no Google. Todos os links na primeira página do Google nos dizem que precisamos aumentar os valores para &lt;strong&gt;max_allowed_packet&lt;/strong&gt; e &lt;strong&gt;wait_timeout&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;No entanto, nada funcionou após a atualização desses valores.&lt;/p&gt;

&lt;h2 id=&quot;solução&quot;&gt;Solução&lt;/h2&gt;

&lt;p&gt;Passamos dias tentando encontrar a causa do problema. Tínhamos a certeza que seria algo relacionado com a ligação com a base de dados. Nós não tivemos nenhuma idéia do que poderia estar ocasionando isso, até que nós lemos o código fonte do CakePHP 3. Há um ingresso no repositório do CakePHP 3 indicando que ele não reconecta automaticamente no MySQL se ele falhar &lt;a href=&quot;https://github.com/cakephp/cakephp/issues/3423&quot;&gt;https://github.com/cakephp/cakephp/issues/3423&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finalmente percebemos a causa:&lt;/p&gt;

&lt;p&gt;Uma vez que iniciamos nosso shell no CakePHP, ele usa uma única instãncia da conexão com o banco de dados até que o processo seja encerrado. Nosso processo de execução de shell do CakePHP é longo, e, uma vez que é iniciado, ele nunca será desligado de propósito. Se nenhum processo for enviado, a conexão MySQL se manterá aberta e permanecerá ociosa. Quando isso é maior que o &lt;strong&gt;wait_timeout&lt;/strong&gt;, a exceção é lançada.&lt;/p&gt;

&lt;p&gt;Podemos ajustar a configuração do &lt;strong&gt;wait_timeout&lt;/strong&gt;. Mas não podemos configurá-lo para ficar para sempre. Precisamos de uma solução melhor.&lt;/p&gt;

&lt;p&gt;A solução é re-conectar MySQL se uma exceção é lançada. Para fazer isso, podemos simplesmente adicionar apenas três linhas como mostrado abaixo:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cake\Datasource\ConnectionManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$connection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ConnectionManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;disconnect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Documentação: &lt;a href=&quot;https://book.cakephp.org/3.0/en/orm/database-basics.html#database-basics&quot;&gt;https://book.cakephp.org/3.0/en/orm/database-basics.html#database-basics&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusão&quot;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Esperamos que este tutorial simples ajude você com o seu desenvolvimento, essa é uma dica bem básica mas que pode salvar vidas (risos).&lt;/p&gt;

&lt;p&gt;Se você tiver dúvidas ou encontrar nossos erros no tutorial acima, deixe um comentário abaixo para nos informar.&lt;/p&gt;

&lt;p&gt;Post originalmente publicado em &lt;a href=&quot;https://www.startutorial.com/articles/view/manually-reconnect-mysql-in-cakephp-3&quot;&gt;outro blog&lt;/a&gt;, fizemos apenas a tradução e adaptamos algumas coisas para melhor entendimento.&lt;/p&gt;

&lt;p&gt;Caso tenha ficado alguma dúvida, ou tenha outra solução, fique a vontade para deixar seu comentário, ou criar um PR com seu artigo, tenho certeza que a comunidade agradece.&lt;/p&gt;</content><author><name>Flaviano Honorato</name></author><summary type="html">O Erro
Desenvolvemos um sistema para gerar relatórios em algumas partes de nossa aplicação. O processo estava rodando com uma longa execução via terminal(shell CakePHP). Tivemos problemas estranhos após a implantação da fila para o servidor de produção. Algumas rotinas foram processadas perfeitamente no início, mas depois de um dia, todos os trabalhos de relatório falharam. Se nós reiniciar-mos a fila, eles voltam a funcionar normalmente, e então depois de um dia voltam a falhar.</summary></entry><entry><title type="html">CakePHP - Rotas - Transformar /users em /usuarios</title><link href="http://cakephpbrasil.com.br/rotas/2017/03/02/rotas-transformar-users-em-usuarios/" rel="alternate" type="text/html" title="CakePHP - Rotas - Transformar /users em /usuarios" /><published>2017-03-02T12:05:00-05:00</published><updated>2017-03-02T12:05:00-05:00</updated><id>http://cakephpbrasil.com.br/rotas/2017/03/02/rotas-transformar-users-em-usuarios</id><content type="html" xml:base="http://cakephpbrasil.com.br/rotas/2017/03/02/rotas-transformar-users-em-usuarios/">&lt;h2 id=&quot;documentação&quot;&gt;Documentação&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://book.cakephp.org/3.0/en/development/routing.html&quot;&gt;Routing&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;desafio&quot;&gt;Desafio&lt;/h2&gt;

&lt;p&gt;Trasnformar as rotas &lt;code class=&quot;highlighter-rouge&quot;&gt;/users&lt;/code&gt; em &lt;code class=&quot;highlighter-rouge&quot;&gt;/usuarios&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;solução&quot;&gt;Solução&lt;/h2&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// config/routes.php

$routes-&amp;gt;connect('/usuarios', ['controller' =&amp;gt; 'Users']);
$routes-&amp;gt;connect('/usuarios/:action', ['controller' =&amp;gt; 'Users']);
$routes-&amp;gt;connect('/usuarios/:action/*', ['controller' =&amp;gt; 'Users']);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;explicação&quot;&gt;Explicação&lt;/h2&gt;

&lt;p&gt;A rota &lt;code class=&quot;highlighter-rouge&quot;&gt;/usuarios&lt;/code&gt; servirá para quando o usuário digitar apenas &lt;code class=&quot;highlighter-rouge&quot;&gt;/usuarios&lt;/code&gt;. Mas, se tivesse apenas esta rota, você não conseguiria acessar a url &lt;code class=&quot;highlighter-rouge&quot;&gt;/usuarios/add&lt;/code&gt;, pois retornaria um erro que não foi encontrado o &lt;strong&gt;UsuariosController&lt;/strong&gt;.
Isso aconteceria, pois as actions não estão mapeadas, para isso, há a segunda rota &lt;code class=&quot;highlighter-rouge&quot;&gt;/usuarios/:action&lt;/code&gt;.
Assim, qualquer action fica coberta por esta rota. Exemplos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/users/login&lt;/code&gt; =&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/usuarios/login&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/users/logout&lt;/code&gt; =&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/usuarios/logout&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Se você não tivesse urls passando parâmetros, como &lt;code class=&quot;highlighter-rouge&quot;&gt;/usuarios/view/1&lt;/code&gt;, só a primeira e segunda rotas, já estaria ok.
Mas, urls como da view, ainda não estão funcionando.
Por isso, usa-se um coringa ‘*’, para dizer que qualquer coisa depois da action fosse redirecionada para o controller Users, e action correspondente.&lt;/p&gt;

&lt;p&gt;Bom, essa foi a dica de hoje. Para quem está acostumado a utilizar o CakePHP, esse tutorial é bem básico, mas para quem está começando, deve ajudar.&lt;/p&gt;

&lt;p&gt;Eu não estou acostumado a escrever, por isso, prefiro encurtar as palavras e não enrolar muito.&lt;/p&gt;

&lt;p&gt;Caso tenha ficado alguma dúvida, ou tenha outra solução, fique a vontade para deixar seu comentário, ou criar um PR com seu artigo, tenho certeza que a comunidade agradece.&lt;/p&gt;</content><author><name>Maicon Pinto</name></author><summary type="html">Documentação</summary></entry><entry><title type="html">Como contribuir!</title><link href="http://cakephpbrasil.com.br/avisos/2016/12/02/como-contribuir/" rel="alternate" type="text/html" title="Como contribuir!" /><published>2016-12-02T09:40:06-05:00</published><updated>2016-12-02T09:40:06-05:00</updated><id>http://cakephpbrasil.com.br/avisos/2016/12/02/como-contribuir</id><content type="html" xml:base="http://cakephpbrasil.com.br/avisos/2016/12/02/como-contribuir/">&lt;p&gt;Bem vindos ao novo Blog do CakePHP Brasil, infelizmente o projeto com Wordpress não é muito simples de manter pelo motivo de ser mais um dashboard para acompanhar, algumas pessoas acabaram ficando chateadas comigo, então, em uma tentativa de ressucitar o blog, montei usando Jekyll, Jenkins e GitHub, assim a coisa fica mais automatizada e o gerenciamento se da através do GitHub, aonde eu já estou logado o dia todo.&lt;/p&gt;

&lt;p&gt;Uma vantagem desta nova abordagem é forçar a comunidade a interagir mais com o GitHub e quem sabe contruir seu portfólio por lá.&lt;/p&gt;

&lt;p&gt;Para saber o que tem pra fazer em cada repostório do GitHub do CakePHP Brasil, entre nas issues de cada projeto, por exemplo, você quer ver o que pode ser melhorado neste projeto, visite nossa organização no link &lt;a href=&quot;https://github.com/CakePHPBrasil&quot;&gt;github.com/CakePHPBrasil&lt;/a&gt;, escolha o repositório &lt;strong&gt;blog&lt;/strong&gt; na lista e depois clique em &lt;strong&gt;issues&lt;/strong&gt; no topo, por exemplo, caso você queira ver as ideias de artigos enviadas pela comunidade, &lt;a href=&quot;https://github.com/CakePHPBrasil/blog/issues?q=is%3Aopen+is%3Aissue+label%3Aarticle&quot;&gt;clique aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;quero-enviar-um-artigo&quot;&gt;Quero enviar um artigo&lt;/h2&gt;

&lt;p&gt;Para enviar novos artigos é muito simples, dentro do diretório &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; adicione um arquivo seguindo a seguinte convenção &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-nome-do-post.markdown&lt;/code&gt; em seguida adicione o seu texto usando o formato markdown (é bem simples, não se assuste).&lt;/p&gt;

&lt;p&gt;No topo do arquivo você configura conforme a seguir:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plan&quot; data-lang=&quot;plan&quot;&gt;---
layout: post
title:  &quot;Como contribuir!&quot;
header-img: &quot;assets/img/sua-imagem-aqui.jpg&quot;
date:   2016-12-02 12:40:06 -0200
categories: avisos
author: 'Erik Figueiredo'
author_url: 'http://www.webdevbr.com.br'
author_url_label: 'WebDevBr'
comments: true
---&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;layouts&lt;/strong&gt;: define o layout desta página, não altere&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;title&lt;/strong&gt;: Título do artigo&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;header-img&lt;/strong&gt;: Aqui vai a sua imagem(que deve ficar no diretório assets/img).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;date&lt;/strong&gt;: Data da pubicação no formato YYYY-MM-DD HH:MM:SS, o -0200 é o timezone&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;categories&lt;/strong&gt;: Categorias que este artigo pertence, caprixe nisso&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;author&lt;/strong&gt;: Seu nome&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;author_url&lt;/strong&gt;: Um link que você queira postar, para que as pessoas te encontrem, seu portifólio, enfim…&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;author_ur_label&lt;/strong&gt;: O texto ancora para seu link&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;comments&lt;/strong&gt;: habilita e desabilita comentários&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O Jekyll que faz o build para o HTML fornece alguns recursos legais, como este &lt;strong&gt;code highlight&lt;/strong&gt; a seguir:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App\Controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UsersController&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppController&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;/**...**/&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Assim que receber seu pull request vamos analizar e aceitar ou indicar correções, se necessário.&lt;/p&gt;

&lt;p&gt;Precisa de ideias para artigos ou quer ajudar alguém, &lt;a href=&quot;https://github.com/CakePHPBrasil/blog/issues?q=is%3Aopen+is%3Aissue+label%3Aarticle&quot;&gt;clique aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Qualquer coisa fico a disposição de vocês!&lt;/p&gt;

&lt;p&gt;Obs.: Não esqueçam de adicionar seu nome e um link no fim do artigo para que quem ler e quiser algum serviço ou trocar uma ideia com vocês, possam encontrá-los.&lt;/p&gt;</content><author><name>Erik Figueiredo</name></author><summary type="html">Bem vindos ao novo Blog do CakePHP Brasil, infelizmente o projeto com Wordpress não é muito simples de manter pelo motivo de ser mais um dashboard para acompanhar, algumas pessoas acabaram ficando chateadas comigo, então, em uma tentativa de ressucitar o blog, montei usando Jekyll, Jenkins e GitHub, assim a coisa fica mais automatizada e o gerenciamento se da através do GitHub, aonde eu já estou logado o dia todo.

Uma vantagem desta nova abordagem é forçar a comunidade a interagir mais com o GitHub e quem sabe contruir seu portfólio por lá.

Para saber o que tem pra fazer em cada repostório do GitHub do CakePHP Brasil, entre nas issues de cada projeto, por exemplo, você quer ver o que pode ser melhorado neste projeto, visite nossa organização no link github.com/CakePHPBrasil, escolha o repositório blog na lista e depois clique em issues no topo, por exemplo, caso você queira ver as ideias de artigos enviadas pela comunidade, clique aqui.

Quero enviar um artigo

Para enviar novos artigos é muito simples, dentro do diretório _posts adicione um arquivo seguindo a seguinte convenção YYYY-MM-DD-nome-do-post.markdown em seguida adicione o seu texto usando o formato markdown (é bem simples, não se assuste).

No topo do arquivo você configura conforme a seguir:

---
layout: post
title:  &quot;Como contribuir!&quot;
header-img: &quot;assets/img/sua-imagem-aqui.jpg&quot;
date:   2016-12-02 12:40:06 -0200
categories: avisos
author: 'Erik Figueiredo'
author_url: 'http://www.webdevbr.com.br'
author_url_label: 'WebDevBr'
comments: true
---


  layouts: define o layout desta página, não altere
  title: Título do artigo
  header-img: Aqui vai a sua imagem(que deve ficar no diretório assets/img).
  date: Data da pubicação no formato YYYY-MM-DD HH:MM:SS, o -0200 é o timezone
  categories: Categorias que este artigo pertence, caprixe nisso
  author: Seu nome
  author_url: Um link que você queira postar, para que as pessoas te encontrem, seu portifólio, enfim…
  author_ur_label: O texto ancora para seu link
  comments: habilita e desabilita comentários


O Jekyll que faz o build para o HTML fornece alguns recursos legais, como este code highlight a seguir:

&amp;lt;?php

namespace App\Controller;

class UsersController extends AppController
{
    public function login()
    {
        /**...**/
    }
}

Assim que receber seu pull request vamos analizar e aceitar ou indicar correções, se necessário.

Precisa de ideias para artigos ou quer ajudar alguém, clique aqui.

Qualquer coisa fico a disposição de vocês!

Obs.: Não esqueçam de adicionar seu nome e um link no fim do artigo para que quem ler e quiser algum serviço ou trocar uma ideia com vocês, possam encontrá-los.</summary></entry><entry><title type="html">Problemas de _cake_core_ e persistent não gravável</title><link href="http://cakephpbrasil.com.br/permissao/2015/03/05/problemas-de-_cake_core_e-persistent-nao-gravavel/" rel="alternate" type="text/html" title="Problemas de _cake_core_ e persistent não gravável" /><published>2015-03-05T09:40:06-05:00</published><updated>2015-03-05T09:40:06-05:00</updated><id>http://cakephpbrasil.com.br/permissao/2015/03/05/problemas-de-_cake_core_e-persistent-nao-gravavel</id><content type="html" xml:base="http://cakephpbrasil.com.br/permissao/2015/03/05/problemas-de-_cake_core_e-persistent-nao-gravavel/">&lt;p&gt;Um problema que pode ser muito comum no Fedora é do” &lt;strong&gt;&lt;em&gt;cake_core&lt;/em&gt; &lt;/strong&gt;…” e do “&lt;strong&gt;… persistent is not writable …&lt;/strong&gt;”:&lt;/p&gt;

&lt;hr /&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;b&gt;Warning&lt;/b&gt;: &lt;em&gt;cake_core&lt;/em&gt; cache was unable to write ‘cake_dev_pt-br’ to File cache in &lt;b&gt;/var/www/html/cakeBlog/lib/Cake/Cache/Cache.php&lt;/b&gt; on line &lt;b&gt;310&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Warning&lt;/b&gt;: /var/www/html/cakeBlog/app/tmp/cache/persistent/ is not writable in &lt;b&gt;/var/www/html/cakeBlog/lib/Cake/Cache/Engine/FileEngine.php&lt;/b&gt; on line &lt;b&gt;337&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Fatal error&lt;/b&gt;: Uncaught exception ‘CacheException’ with message ‘Cache engine &lt;em&gt;cake_core&lt;/em&gt; is not properly configured.’ in /var/www/html/cakeBlog/lib/Cake/Cache/Cache.php:166 Stack trace: #0 /var/www/html/cakeBlog/lib/Cake/Cache/Cache.php(136): Cache::&lt;em&gt;buildEngine(‘_cake_core&lt;/em&gt;’) #1 /var/www/html/cakeBlog/app/Config/core.php(336): Cache::config(‘&lt;em&gt;cake_core&lt;/em&gt;’, Array) #2 /var/www/html/cakeBlog/lib/Cake/Core/Configure.php(78): include(‘/var/www/html/c…’) #3 /var/www/html/cakeBlog/lib/Cake/bootstrap.php(171): Configure::bootstrap(true) #4 /var/www/html/cakeBlog/app/webroot/index.php(92): include(‘/var/www/html/c…’) #5 {main} thrown in &lt;b&gt;/var/www/html/cakeBlog/lib/Cake/Cache/Cache.php&lt;/b&gt; on line &lt;b&gt;166&lt;/b&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Para resolver esse problema é muito simples:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Abre o terminal e execute o seguinte comando (no meu caso usarei o gedit, você pode usar qualquer um de sua preferencia):
&lt;ol&gt;
	&lt;li&gt;&lt;em&gt;sudo gedit /etc/selinux/config&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
	&lt;li&gt;Procure a linha &lt;strong&gt;SELINUX&lt;/strong&gt;.&lt;/li&gt;
	&lt;li&gt;Altera para &lt;strong&gt;disabled&lt;/strong&gt;, ficando assim: &lt;strong&gt;SELINUX=disabled&lt;/strong&gt;&lt;/li&gt;
	&lt;li&gt;Após isso salve e reinicie o computador.&lt;/li&gt;
	&lt;li&gt;Agora é só colocar as permissões nos arquivos do CakePHP que irá funcionar normalmente.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Link de onde o tutorial foi baseado: &lt;a href=&quot;https://groups.google.com/forum/#!topic/cake-php/ULapxcvVIbs&quot; target=&quot;_blank&quot;&gt;Aqui&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;</content><author><name>Leonardo Siervo Belini</name></author><summary type="html">Um problema que pode ser muito comum no Fedora é do” cake_core …” e do “… persistent is not writable …”:





Warning: cake_core cache was unable to write ‘cake_dev_pt-br’ to File cache in /var/www/html/cakeBlog/lib/Cake/Cache/Cache.php on line 310

Warning: /var/www/html/cakeBlog/app/tmp/cache/persistent/ is not writable in /var/www/html/cakeBlog/lib/Cake/Cache/Engine/FileEngine.php on line 337

Fatal error: Uncaught exception ‘CacheException’ with message ‘Cache engine cake_core is not properly configured.’ in /var/www/html/cakeBlog/lib/Cake/Cache/Cache.php:166 Stack trace: #0 /var/www/html/cakeBlog/lib/Cake/Cache/Cache.php(136): Cache::buildEngine(‘_cake_core’) #1 /var/www/html/cakeBlog/app/Config/core.php(336): Cache::config(‘cake_core’, Array) #2 /var/www/html/cakeBlog/lib/Cake/Core/Configure.php(78): include(‘/var/www/html/c…’) #3 /var/www/html/cakeBlog/lib/Cake/bootstrap.php(171): Configure::bootstrap(true) #4 /var/www/html/cakeBlog/app/webroot/index.php(92): include(‘/var/www/html/c…’) #5 {main} thrown in /var/www/html/cakeBlog/lib/Cake/Cache/Cache.php on line 166



Para resolver esse problema é muito simples:

	Abre o terminal e execute o seguinte comando (no meu caso usarei o gedit, você pode usar qualquer um de sua preferencia):

	sudo gedit /etc/selinux/config


	Procure a linha SELINUX.
	Altera para disabled, ficando assim: SELINUX=disabled
	Após isso salve e reinicie o computador.
	Agora é só colocar as permissões nos arquivos do CakePHP que irá funcionar normalmente.

Link de onde o tutorial foi baseado: Aqui

 </summary></entry><entry><title type="html">Mini-curso Cake PHP Iniciantes (Em andamento)</title><link href="http://cakephpbrasil.com.br/video/2015/02/18/mini-curso-cakephp-parte-2-em-andamento/" rel="alternate" type="text/html" title="Mini-curso Cake PHP Iniciantes (Em andamento)" /><published>2015-02-18T09:40:06-05:00</published><updated>2015-02-18T09:40:06-05:00</updated><id>http://cakephpbrasil.com.br/video/2015/02/18/mini-curso-cakephp-parte-2-em-andamento</id><content type="html" xml:base="http://cakephpbrasil.com.br/video/2015/02/18/mini-curso-cakephp-parte-2-em-andamento/">&lt;p&gt;AULA 01 - INTRODUÇÃO-(Aula  Online Gravada)&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;420&quot; src=&quot;http://www.youtube.com/embed/f6dZUW9yfU8?color=white&amp;amp;theme=light&quot; style=&quot;border: none&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;AULA 02 - MODELAGEM&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;420&quot; src=&quot;http://www.youtube.com/embed/DhvhTewUWzU?color=white&amp;amp;theme=light&quot; style=&quot;border: none&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;AULA 03 - MVC&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;420&quot; src=&quot;http://www.youtube.com/embed/1SQ2gtV1y7Q?color=white&amp;amp;theme=light&quot; style=&quot;border: none&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;AULA 04 - UTILIZANDO O BAKE&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;420&quot; src=&quot;http://www.youtube.com/embed/nZabeztFn9k?color=white&amp;amp;theme=light&quot; style=&quot;border: none&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Aguardem a próxima aula…&lt;/p&gt;</content><author><name>Waldemar Neto</name></author><summary type="html">AULA 01 - INTRODUÇÃO-(Aula  Online Gravada)


AULA 02 - MODELAGEM



AULA 03 - MVC



AULA 04 - UTILIZANDO O BAKE



Aguardem a próxima aula…</summary></entry><entry><title type="html">Como definir o debug habilitado para o servidor local e desabilitado para a hospedagem automaticamente</title><link href="http://cakephpbrasil.com.br/deploy/2015/02/05/como-definir-o-debug-habilitado-para-o-servidor-local-e-desabilitado-para-a-hospedagem-automaticamente/" rel="alternate" type="text/html" title="Como definir o debug habilitado para o servidor local e desabilitado para a hospedagem automaticamente" /><published>2015-02-05T09:40:06-05:00</published><updated>2015-02-05T09:40:06-05:00</updated><id>http://cakephpbrasil.com.br/deploy/2015/02/05/como-definir-o-debug-habilitado-para-o-servidor-local-e-desabilitado-para-a-hospedagem-automaticamente</id><content type="html" xml:base="http://cakephpbrasil.com.br/deploy/2015/02/05/como-definir-o-debug-habilitado-para-o-servidor-local-e-desabilitado-para-a-hospedagem-automaticamente/">&lt;p&gt;Este post está destinado a pessoas que vêm me perguntando se existe uma forma de o Cake identificar automaticamente se o servidor é o de desenvolvimento ou de produção, e configurar o debug automaticamente conforme o tipo de servidor.&lt;/p&gt;

&lt;p&gt;Bom, sabemos que para quem desenvolve, é imprescindível o uso do debug, mas o mesmo deve ser desativado ao público, porém algumas vezes precisamos estar constantemente alterando diretrizes no core.php (ou no app.php no caso do Cake 3.0), e se enviarmos este arquivo para o servidor de produção podemos estar sem querer habilitando o debug na produção, o que é uma falha grave. Mas podemos automatizar o processo do debug e configurá-lo conforme o servidor, para isto existem várias opções.&lt;!--more--&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;1. Minha preferida, utilizar um arquivo de configuração global do PHP&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;O php.ini tem uma diretriz chamada “auto_prepend_file”, esta diretriz define que um arquivo.php será sempre adicionado ao qualquer projeto que você criar com PHP, o mesmo será SEMPRE adicionado no início de qualquer script PHP. Para proceder…&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Abra o php.ini e procure a linha &quot;auto_prepend_file&quot; e altere para &quot;auto_prepend_file=/caminho/para/global_config.php&quot; por exemplo, (C:\caminho\para\global_config.php no windows), este global_config.php pode estar em qualquer pasta.&lt;/li&gt;
	&lt;li&gt;Crie o arquivo global_config.php na pasta definida no php.ini&lt;/li&gt;
	&lt;li&gt;Insira o código abaixo
&amp;lt;?PHP
define('CAKE_DEBUG',2);
OU... caso trabalhe com Cake 2.x e Cake 3.0 no mesmo servidor utilize:
define('CAKE2_DEBUG,2);
define('CAKE3_DEBUG,1);&lt;/li&gt;
	&lt;li&gt;Reinicie o apache&lt;/li&gt;
	&lt;li&gt;abra o arquivo core.php (no cake 2.x) procure pela linha &quot;Configure::write('debug',2);&quot; e altere para &quot;Configure::write('debug',0);&quot; e logo abaixo desta linha insira:
if(defined('CAKE2_DEBUG')) Configure::write('debug',CAKE_DEBUG);&lt;/li&gt;
	&lt;li&gt;No Cake 3.0 você insere no final do código:
if(defined('CAKE3_DEBUG')) $config['debug'] = CAKE3_DEBUG;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Pronto, agora pode alterar o core.php ou app.php a vontade e enviar para o servidor de produção quando quiser que não correrá mais o risco de habilitar o debug sem querer no servidor de produção…&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;2ª opção: Utilizando o SetEvent no Apache.&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Uma outra opção é utilizar a diretriz SetEnv do Apache, assim terá a diretriz env(‘CAKE2_DEBUG’) na aplicação no servidor de desenvolvimento, e não no de produção.&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Abra o httpd.conf e insira em qualquer lugar o código:
SetEnv CAKE2_DEBUG 2
SetEnv CAKE3_DEBUG 1&lt;/li&gt;
	&lt;li&gt;Salve o httpd.conf e reinicie o apache&lt;/li&gt;
	&lt;li&gt;Abra o core.php da sua aplicação e modifique a linha &quot;Configure::write('debug',2)&quot; para 0, e logo abaixo insira:
if(env('CAKE2_DEBUG')) Configure::write('debug',env('CAKE2_DEBUG'));&lt;/li&gt;
	&lt;li&gt;No Cake 3.0 insira no final do app.php:
if(env('CAKE2_DEBUG')) $config['debug'] = env('CAKE3_DEBUG');&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Existe também a possibilidade de alterar o .htaccess da sua aplicação inserindo a diretriz SetEnv, mas todo novo projeto terá que alterar o .htaccess (Lembre-se, sempre o do webroot), inserindo direto no httpd.conf você terá essas opções globais, porém toda vez que precisar alterar terá que reiniciar o apache.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;3ª Opção: Identificando o servidor local&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Esta solução foi sugerido por um usuário do grupo do facebook, então estarei postando aqui também.&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Abra o arquivo core.php e insira as seguintes linhas:
&lt;span class=&quot;UFICommentBody&quot;&gt;if (env('SERVER_ADDR') == '127.0.0.1' ||
strstr(env('SERVER_NAME'), 'dev') !== false ||
strstr(env('SERVER_NAME'), 'localhost') !== false ||
// C0A8 stands for IPv6 Address
strstr(env('SERVER_ADDR'), 'C0A8') !== false ||
strstr(env('SERVER_ADDR'), '192.168') !== false
) {
Configure::write('debug', 2);
} else {
Configure::write('debug', 0);
}&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;strong&gt;Conclusão&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;As três opções listadas aqui vão trazer um resultado satisfatório, particularmente prefiro a primeira opção, pois você pode alterar o debug através do arquivo de configuração global a qualquer momento sem a necessidade de reiniciar o apache para surtir efeito. A segunda opção é uma sugestão dos mantenedores do Cake, gosto muido desta opção também porém toda vez que precisar alterar a diretriz terá que reiniciar o apache (Exceto no caso de utilizar o .htaccess, aí não será necessário reiniciar, mas se ocorrer de sem querer enviar para produção o .htaccess, estará habilitando o debug ao público).&lt;/p&gt;</content><author><name>Andre Cavallari</name></author><summary type="html">Este post está destinado a pessoas que vêm me perguntando se existe uma forma de o Cake identificar automaticamente se o servidor é o de desenvolvimento ou de produção, e configurar o debug automaticamente conforme o tipo de servidor.

Bom, sabemos que para quem desenvolve, é imprescindível o uso do debug, mas o mesmo deve ser desativado ao público, porém algumas vezes precisamos estar constantemente alterando diretrizes no core.php (ou no app.php no caso do Cake 3.0), e se enviarmos este arquivo para o servidor de produção podemos estar sem querer habilitando o debug na produção, o que é uma falha grave. Mas podemos automatizar o processo do debug e configurá-lo conforme o servidor, para isto existem várias opções.



 
1. Minha preferida, utilizar um arquivo de configuração global do PHP
O php.ini tem uma diretriz chamada “auto_prepend_file”, esta diretriz define que um arquivo.php será sempre adicionado ao qualquer projeto que você criar com PHP, o mesmo será SEMPRE adicionado no início de qualquer script PHP. Para proceder…

	Abra o php.ini e procure a linha &quot;auto_prepend_file&quot; e altere para &quot;auto_prepend_file=/caminho/para/global_config.php&quot; por exemplo, (C:\caminho\para\global_config.php no windows), este global_config.php pode estar em qualquer pasta.
	Crie o arquivo global_config.php na pasta definida no php.ini
	Insira o código abaixo
&amp;lt;?PHP
define('CAKE_DEBUG',2);
OU... caso trabalhe com Cake 2.x e Cake 3.0 no mesmo servidor utilize:
define('CAKE2_DEBUG,2);
define('CAKE3_DEBUG,1);
	Reinicie o apache
	abra o arquivo core.php (no cake 2.x) procure pela linha &quot;Configure::write('debug',2);&quot; e altere para &quot;Configure::write('debug',0);&quot; e logo abaixo desta linha insira:
if(defined('CAKE2_DEBUG')) Configure::write('debug',CAKE_DEBUG);
	No Cake 3.0 você insere no final do código:
if(defined('CAKE3_DEBUG')) $config['debug'] = CAKE3_DEBUG;

Pronto, agora pode alterar o core.php ou app.php a vontade e enviar para o servidor de produção quando quiser que não correrá mais o risco de habilitar o debug sem querer no servidor de produção…
2ª opção: Utilizando o SetEvent no Apache.
Uma outra opção é utilizar a diretriz SetEnv do Apache, assim terá a diretriz env(‘CAKE2_DEBUG’) na aplicação no servidor de desenvolvimento, e não no de produção.

	Abra o httpd.conf e insira em qualquer lugar o código:
SetEnv CAKE2_DEBUG 2
SetEnv CAKE3_DEBUG 1
	Salve o httpd.conf e reinicie o apache
	Abra o core.php da sua aplicação e modifique a linha &quot;Configure::write('debug',2)&quot; para 0, e logo abaixo insira:
if(env('CAKE2_DEBUG')) Configure::write('debug',env('CAKE2_DEBUG'));
	No Cake 3.0 insira no final do app.php:
if(env('CAKE2_DEBUG')) $config['debug'] = env('CAKE3_DEBUG');

Existe também a possibilidade de alterar o .htaccess da sua aplicação inserindo a diretriz SetEnv, mas todo novo projeto terá que alterar o .htaccess (Lembre-se, sempre o do webroot), inserindo direto no httpd.conf você terá essas opções globais, porém toda vez que precisar alterar terá que reiniciar o apache.
3ª Opção: Identificando o servidor local
Esta solução foi sugerido por um usuário do grupo do facebook, então estarei postando aqui também.

	Abra o arquivo core.php e insira as seguintes linhas:
if (env('SERVER_ADDR') == '127.0.0.1' ||
strstr(env('SERVER_NAME'), 'dev') !== false ||
strstr(env('SERVER_NAME'), 'localhost') !== false ||
// C0A8 stands for IPv6 Address
strstr(env('SERVER_ADDR'), 'C0A8') !== false ||
strstr(env('SERVER_ADDR'), '192.168') !== false
) {
Configure::write('debug', 2);
} else {
Configure::write('debug', 0);
}

Conclusão
As três opções listadas aqui vão trazer um resultado satisfatório, particularmente prefiro a primeira opção, pois você pode alterar o debug através do arquivo de configuração global a qualquer momento sem a necessidade de reiniciar o apache para surtir efeito. A segunda opção é uma sugestão dos mantenedores do Cake, gosto muido desta opção também porém toda vez que precisar alterar a diretriz terá que reiniciar o apache (Exceto no caso de utilizar o .htaccess, aí não será necessário reiniciar, mas se ocorrer de sem querer enviar para produção o .htaccess, estará habilitando o debug ao público).</summary></entry><entry><title type="html">Cakegallery do Hugo Dias!</title><link href="http://cakephpbrasil.com.br/plugins/2015/01/30/cakegallery-do-hugo-dias/" rel="alternate" type="text/html" title="Cakegallery do Hugo Dias!" /><published>2015-01-30T09:40:06-05:00</published><updated>2015-01-30T09:40:06-05:00</updated><id>http://cakephpbrasil.com.br/plugins/2015/01/30/cakegallery-do-hugo-dias</id><content type="html" xml:base="http://cakephpbrasil.com.br/plugins/2015/01/30/cakegallery-do-hugo-dias/">&lt;p&gt;Vocês sabiam que, além do &lt;a href=&quot;https://www.facebook.com/groups/cakebrasil/&quot; target=&quot;_blank&quot;&gt;CakePHP Brasil no Facebook,&lt;/a&gt; no Google+ tem uma comunidade do&lt;a href=&quot;https://plus.google.com/communities/101232071259098508722&quot; target=&quot;_blank&quot;&gt; CakePHP Brasil&lt;/a&gt;? Pois é, ela foi criada pelo Hugo Dias, um camarada super gente boa com quem já troquei algumas palavras uma ou duas vezes.&lt;/p&gt;

&lt;p&gt;Ele criou um upload de imagens para cake super show de bola, então fica a dica pra vocês.&lt;/p&gt;

&lt;h3&gt;Apresentação do projeto&lt;/h3&gt;

&lt;iframe width=&quot;560&quot; height=&quot;420&quot; src=&quot;http://www.youtube.com/embed/AhU16ji_i9g?color=white&amp;amp;theme=light&quot; style=&quot;border: none&quot;&gt;&lt;/iframe&gt;

&lt;h3&gt;Tutorial de instalação&lt;/h3&gt;

&lt;iframe width=&quot;560&quot; height=&quot;420&quot; src=&quot;http://www.youtube.com/embed/OEgVQQTaWkE?color=white&amp;amp;theme=light&quot; style=&quot;border: none&quot;&gt;&lt;/iframe&gt;

&lt;h3&gt;Como usar a ferramenta&lt;/h3&gt;

&lt;iframe width=&quot;560&quot; height=&quot;420&quot; src=&quot;http://www.youtube.com/embed/kxKRSY4Tdjc?color=white&amp;amp;theme=light&quot; style=&quot;border: none&quot;&gt;&lt;/iframe&gt;

&lt;h3&gt;Utilizando os Helpers&lt;/h3&gt;

&lt;iframe width=&quot;560&quot; height=&quot;420&quot; src=&quot;http://www.youtube.com/embed/nKnjlPbMj-g?color=white&amp;amp;theme=light&quot; style=&quot;border: none&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Bons estudos :D&lt;/p&gt;</content><author><name>Erik Figueiredo</name></author><summary type="html">Vocês sabiam que, além do CakePHP Brasil no Facebook, no Google+ tem uma comunidade do CakePHP Brasil? Pois é, ela foi criada pelo Hugo Dias, um camarada super gente boa com quem já troquei algumas palavras uma ou duas vezes.

Ele criou um upload de imagens para cake super show de bola, então fica a dica pra vocês.

Apresentação do projeto



Tutorial de instalação



Como usar a ferramenta



Utilizando os Helpers



Bons estudos :D</summary></entry><entry><title type="html">Mini curso CakePHP parte 1 , geração de código utilizando o bake e estrutura!</title><link href="http://cakephpbrasil.com.br/video/2015/01/08/mini-curso-cakephp-parte-1-geracao-de-codigo-utilizando-o-bake-e-estrutura/" rel="alternate" type="text/html" title="Mini curso CakePHP parte 1 , geração de código utilizando o bake e estrutura!" /><published>2015-01-08T07:52:06-05:00</published><updated>2015-01-08T07:52:06-05:00</updated><id>http://cakephpbrasil.com.br/video/2015/01/08/mini-curso-cakephp-parte-1-geracao-de-codigo-utilizando-o-bake-e-estrutura</id><content type="html" xml:base="http://cakephpbrasil.com.br/video/2015/01/08/mini-curso-cakephp-parte-1-geracao-de-codigo-utilizando-o-bake-e-estrutura/">&lt;p&gt;Ola pessoal, a o longo de 5 videos vamos conhecer o básico/intermediário sobre o framework CakePHP, o suficiente para criar aplicação de diversos tipos e tamanhos.&lt;/p&gt;

&lt;p&gt;Nestes tutoriais eu tento usar o mais comum de vermos no mercado, no dia a dia de trabalho.&lt;/p&gt;

&lt;p&gt;Espero que gostem das video aulas, e me sigam la no Youtube.
Um grande abraço.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;420&quot; src=&quot;http://www.youtube.com/embed/QtP3y8dvKQQ?color=white&amp;amp;theme=light&quot; style=&quot;border: none&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;O código que eu fiz neste tutorial esta no meu GitHub &lt;a title=&quot;https://github.com/waldemarnt/tutorial-cakephp/tree/fase1&quot; href=&quot;https://github.com/waldemarnt/tutorial-cakephp/tree/fase1&quot; target=&quot;_blank&quot;&gt;https://github.com/waldemarnt/tutorial-cakephp/tree/fase1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Até a próxima parte, onde iremos ver os padrões de views, imports, e mais um pouco de estrutura.&lt;/p&gt;</content><author><name>Waldemar Neto</name></author><summary type="html">Ola pessoal, a o longo de 5 videos vamos conhecer o básico/intermediário sobre o framework CakePHP, o suficiente para criar aplicação de diversos tipos e tamanhos.

Nestes tutoriais eu tento usar o mais comum de vermos no mercado, no dia a dia de trabalho.

Espero que gostem das video aulas, e me sigam la no Youtube.
Um grande abraço.



O código que eu fiz neste tutorial esta no meu GitHub https://github.com/waldemarnt/tutorial-cakephp/tree/fase1

Até a próxima parte, onde iremos ver os padrões de views, imports, e mais um pouco de estrutura.</summary></entry></feed>
